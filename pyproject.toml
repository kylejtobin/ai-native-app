[project]
name = "ai-native-app"
version = "0.1.0"
description = "Enterprise AI architecture template and teaching resource. Demonstrates polyglot persistence, immutable domain models, type-safe LLM integration, and production patterns that scale."
readme = "README.md"
requires-python = ">=3.13"
license = { file = "LICENSE" }
authors = [
    { name = "Kyle Tobin", email = "tobin.kyle@gmail.com" }
]
dependencies = [
    "asyncpg>=0.29.0",
    "fastapi>=0.104.0",
    "neo4j>=5.14.0",
    "passlib[bcrypt]>=1.7.4",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.10.1",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "redis>=6.4.0",
    "sqlalchemy>=2.0.0",
    "uvicorn[standard]>=0.24.0",
    "types-sqlalchemy>=1.4.53.38",
    "types-pyjwt>=1.7.1",
    "pyjwt>=2.10.1",
    "httpx>=0.28.1",
    "pydantic-ai>=1.0.10",
    "pyyaml>=6.0.3",
    "minio>=7.2.18",
    "qdrant-client>=1.15.1",
    "tavily-python>=0.7.12",
    "logfire>=4.10.0",
]

[dependency-groups]
dev = [
  "pytest>=8",
  "pytest-cov>=5",
  "pytest-xdist>=3",
  "pytest-asyncio>=0.23.0",
  "httpx>=0.25.0",
  "requests>=2.31.0",
  "types-passlib>=1.7",
  "passlib>=1.7.4",
  "types-pyyaml>=6.0.12.20250915",
]

[build-system]
requires = ["uv_build>=0.8.17,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
# Tell uv_build where your code lives and which *single* top-level module to expose
module-root = "src"
module-name = "app"


# ==================== Pytest ====================
[tool.pytest.ini_options]
addopts = "-q --tb=short -v"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: marks tests as integration tests (may be slow)",
    "unit: marks tests as unit tests (fast)",
    "api: marks tests as API endpoint tests",
    "domain: marks tests as domain model tests",
    "db: marks tests as database tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# ==================== Coverage ==================
[tool.coverage.run]
omit = ["*/tests/*"]

# ============== Ruff (Linting & Formatting) ==============
[tool.ruff]
line-length = 120
target-version = "py313"
src = ["src"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B", "RUF"]
ignore = [
  "E501",  # line too long (formatter handles it)
  "UP046",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # allow 'assert' in tests

# ============== Mypy (Type Checking) ==============
[tool.mypy]
python_version = "3.13"
strict = true
explicit_package_bases = true
ignore_missing_imports = true
disable_error_code = ["prop-decorator"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
